Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags: 
        - Key: Name
          Value: MyVPC
  
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref MyVPC
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref MyVPC
      MapPublicIpOnLaunch: true

  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref MyVPC

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref MyVPC

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  NatGatewayEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc

  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  MyLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: MyALB
      Subnets: 
        - Ref: PublicSubnet1
        - Ref: PublicSubnet2
      LoadBalancerAttributes: 
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Scheme: internet-facing

  HttpListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP

  LoadBalancerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for ALB"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # Allow traffic from anywhere on port 80

  TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Name: MyTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref MyVPC

  LaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: ami-0dbc3d7bc646e8516
      InstanceType: t2.micro
      AssociatePublicIpAddress: false  # Instances are in a private network
      SecurityGroups:
        - Ref: InstanceSecurityGroup
      UserData: 
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1  # Redirect output to user-data.log
            yum update -y
            yum install -y httpd php php-mysqlnd
            aws s3 cp s3://my-project-code-bucket/php-mysql-crud.zip /var/www/html/
            unzip /var/www/html/php-mysql-crud.zip -d /var/www/html/
            systemctl start httpd
      IamInstanceProfile: !Ref EC2InstanceProfile

  MyAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      VPCZoneIdentifier:
        - Ref: PrivateSubnet1
        - Ref: PrivateSubnet2
      TargetGroupARNs:
        - Ref: TargetGroup
      HealthCheckType: "ELB"
      HealthCheckGracePeriod: 300
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 3
      LaunchConfigurationName: !Ref LaunchConfiguration
      Tags:
        - Key: Name
          Value: MyASG
          PropagateAtLaunch: true

  InstanceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties: 
      GroupDescription: "Security group for ASG Instances"
      VpcId: !Ref MyVPC

  CpuScalingPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: !Ref MyAutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 50  # Scale based on CPU utilization to approximate request rate

  ProjectCodeBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: my-project-code-bucket
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

  EC2InstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: AccessS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${ProjectCodeBucket.BucketName}/*'
                  - !Sub 'arn:aws:s3:::${ProjectCodeBucket.BucketName}'

  EC2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - Ref: EC2InstanceRole

  DBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: "Access to RDS from within the ASG"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !GetAtt InstanceSecurityGroup.GroupId

  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "Subnet group for MyDB"
      SubnetIds:
        - Ref: PrivateSubnet1
        - Ref: PrivateSubnet2

  MyDB:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBInstanceIdentifier: MyDBInstance
      DBName: php_mysql_crud
      Engine: mysql
      EngineVersion: "8.0"
      MasterUsername: root
      MasterUserPassword: password123
      DBInstanceClass: db.t3.micro  
      AllocatedStorage: "20" 
      BackupRetentionPeriod: 7  
      MultiAZ: false 
      VPCSecurityGroups:
        - Ref: DBSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - Ref: DBSecurityGroup

  MentorUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: Mentor

  MentorPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: MentorPolicy
      Users:
        - Ref: MentorUser
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'cloudformation:DescribeChangeSet'
              - 'cloudformation:DescribeStackResources'
              - 'cloudformation:DescribeStacks'
              - 'cloudformation:GetTemplate'
              - 'cloudformation:ListStackResources'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'ec2:Describe*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'rds:Describe*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:List*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'elasticloadbalancing:Describe*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'autoscaling:Describe*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'ec2:DescribeVpcs'
              - 'ec2:DescribeSubnets'
              - 'ec2:DescribeSecurityGroups'
              - 'ec2:DescribeRouteTables'
              - 'ec2:DescribeNetworkAcls'
              - 'ec2:DescribeNatGateways'
              - 'ec2:DescribeInternetGateways'
              - 'ec2:DescribeVpcPeeringConnections'
              - 'ec2:DescribeVpnConnections'
              - 'ec2:DescribeVpnGateways'
            Resource: '*'

Outputs:
  S3Bucket:
    Value: !Ref ProjectCodeBucket
    Description: "S3 bucket for storing project code."

  LoadBalancerDNS:
    Value: !GetAtt MyLoadBalancer.DNSName
    Description: "The DNS name of the Load Balancer."

